\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.BorderLayout}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.Color}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.Dimension}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.FlowLayout}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.GradientPaint}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.Graphics}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.Graphics2D}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.Image}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.event.MouseEvent}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.awt.event.MouseListener}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.BufferedReader}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.File}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.FileInputStream}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.FileWriter}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.FilenameFilter}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.IOException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.InputStream}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.InputStreamReader}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.ArrayList}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.Collection}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.Iterator}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.List}\PYG{o}{;}

\PYG{k+kn}{import} \PYG{n+nn}{javax.imageio.ImageIO}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.JButton}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.JComboBox}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.JFileChooser}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.JFrame}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.JLabel}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.swing.filechooser.FileNameExtensionFilter}\PYG{o}{;}

\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.parsers.DocumentBuilder}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.parsers.DocumentBuilderFactory}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.parsers.ParserConfigurationException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.transform.Transformer}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.transform.TransformerFactory}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.transform.dom.DOMSource}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.transform.stream.StreamResult}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.xpath.XPath}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.xpath.XPathConstants}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.xpath.XPathExpressionException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{javax.xml.xpath.XPathFactory}\PYG{o}{;}

\PYG{k+kn}{import} \PYG{n+nn}{org.w3c.dom.Document}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.w3c.dom.Element}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.w3c.dom.NodeList}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.xml.sax.SAXException}\PYG{o}{;}

\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.*}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.ConnectionConfiguration}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.MessageListener}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.SmackConfiguration}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.XMPPConnection}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.XMPPException}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.ConnectionConfiguration.SecurityMode}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.packet.Message}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.packet.Presence}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smack.packet.Presence.Type}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.Form}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.ServiceDiscoveryManager}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.muc.Affiliate}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.muc.MultiUserChat}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.muc.Occupant}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.muc.RoomInfo}\PYG{o}{;}
\PYG{k+kn}{import} \PYG{n+nn}{org.jivesoftware.smackx.packet.DiscoverItems}\PYG{o}{;}


\PYG{n+nd}{@SuppressWarnings}\PYG{o}{(\PYGZob{}} \PYG{l+s}{\PYGZdq{}unused\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}serial\PYGZdq{}} \PYG{o}{\PYGZcb{})}
\PYG{k+kd}{public} \PYG{k+kd}{class} \PYG{n+nc}{ButtonLaunch} \PYG{k+kd}{extends} \PYG{n}{JButton} \PYG{k+kd}{implements} \PYG{n}{MouseListener} \PYG{o}{\PYGZob{}}
	
	 \PYG{k+kd}{private} \PYG{n}{String} \PYG{n}{name}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{Image} \PYG{n}{img}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{JButton} \PYG{n}{bouton\PYGZus{}ok}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{JFrame} \PYG{n}{fenetre}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{JComboBox}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{comboPrb}\PYG{o}{;} 
	 \PYG{k+kd}{private} \PYG{k+kd}{static} \PYG{n}{FilenameFilter} \PYG{n}{xmlFileFilter} \PYG{o}{=} \PYG{k}{new} \PYG{n}{FilenameFilter}\PYG{o}{()} \PYG{o}{\PYGZob{}}\PYG{k+kd}{public} \PYG{k+kt}{boolean} \PYG{n+nf}{accept}\PYG{o}{(}\PYG{n}{File} \PYG{n}{dir}\PYG{o}{,} \PYG{n}{String} \PYG{n}{name}\PYG{o}{)} \PYG{o}{\PYGZob{}}\PYG{k}{return} \PYG{n}{name}\PYG{o}{.}\PYG{n+na}{endsWith}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}.xml\PYGZdq{}}\PYG{o}{);\PYGZcb{}\PYGZcb{};}
	 \PYG{k+kd}{private} \PYG{n}{File} \PYG{n}{repertoire}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{File}\PYG{o}{[]} \PYG{n}{files}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{File} \PYG{n}{fichier\PYGZus{}Choisi}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{XmppManager} \PYG{n}{xmppManager} \PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{String} \PYG{n}{ProblemeCourant}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{k+kt}{boolean} \PYG{n}{isRunning} \PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Identity}\PYG{o}{\PYGZgt{}} \PYG{n}{Liste\PYGZus{}user}\PYG{o}{;}
	 \PYG{k+kd}{private} \PYG{n}{JLabel} \PYG{n}{res} \PYG{o}{;}
	 
	 \PYG{k+kd}{public} \PYG{n+nf}{ButtonLaunch}\PYG{o}{(}\PYG{n}{String} \PYG{n}{str}\PYG{o}{)\PYGZob{}}
	    \PYG{k+kd}{super}\PYG{o}{(}\PYG{n}{str}\PYG{o}{);}
	    \PYG{k}{this}\PYG{o}{.}\PYG{n+na}{name} \PYG{o}{=} \PYG{n}{str}\PYG{o}{;}
	    \PYG{k}{this}\PYG{o}{.}\PYG{n+na}{addMouseListener}\PYG{o}{(}\PYG{k}{this}\PYG{o}{);}
	    \PYG{n}{fenetre} \PYG{o}{=} \PYG{k}{new} \PYG{n}{JFrame}\PYG{o}{();}
	    \PYG{n}{comboPrb} \PYG{o}{=} \PYG{k}{new} \PYG{n}{JComboBox}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}();}
	    
	    \PYG{n}{bouton\PYGZus{}ok} \PYG{o}{=} \PYG{k}{new} \PYG{n}{JButton}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}OK\PYGZdq{}}\PYG{o}{);}
	    \PYG{n}{Liste\PYGZus{}user} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Identity}\PYG{o}{\PYGZgt{}();}
	    \PYG{n}{res}\PYG{o}{=}\PYG{k}{new} \PYG{n}{JLabel}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Resultat\PYGZdq{}}\PYG{o}{);}
	    \PYG{n}{xmppManager} \PYG{o}{=} \PYG{k}{new} \PYG{n}{XmppManager}\PYG{o}{(}\PYG{n}{XmppManager}\PYG{o}{.}\PYG{n+na}{NOM\PYGZus{}HOTE}\PYG{o}{,} \PYG{l+m+mi}{5222}\PYG{o}{);}
	  \PYG{o}{\PYGZcb{}}
	 \PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{FileToString}\PYG{o}{(}\PYG{n}{String} \PYG{n}{PathFile}\PYG{o}{)}
		\PYG{o}{\PYGZob{}}
			\PYG{n}{String} \PYG{n}{fic} \PYG{o}{=}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{o}{;}
			\PYG{c+c1}{//lecture du fichier texte	}
			\PYG{k}{try}
			\PYG{o}{\PYGZob{}}
				\PYG{n}{InputStream} \PYG{n}{ips}\PYG{o}{=}\PYG{k}{new} \PYG{n}{FileInputStream}\PYG{o}{(}\PYG{n}{PathFile}\PYG{o}{);} 
				\PYG{n}{InputStreamReader} \PYG{n}{ipsr}\PYG{o}{=}\PYG{k}{new} \PYG{n}{InputStreamReader}\PYG{o}{(}\PYG{n}{ips}\PYG{o}{);}
				\PYG{n}{BufferedReader} \PYG{n}{br}\PYG{o}{=}\PYG{k}{new} \PYG{n}{BufferedReader}\PYG{o}{(}\PYG{n}{ipsr}\PYG{o}{);}
				\PYG{n}{String} \PYG{n}{ligne}\PYG{o}{;}
				\PYG{k}{while} \PYG{o}{((}\PYG{n}{ligne}\PYG{o}{=}\PYG{n}{br}\PYG{o}{.}\PYG{n+na}{readLine}\PYG{o}{())!=}\PYG{k+kc}{null}\PYG{o}{)}
				\PYG{o}{\PYGZob{}}
					\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{n}{ligne}\PYG{o}{);}
					\PYG{n}{fic}\PYG{o}{+=}\PYG{n}{ligne}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}\PYGZbs{}n\PYGZdq{}}\PYG{o}{;}
				\PYG{o}{\PYGZcb{}}
				\PYG{n}{br}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();} 
				\PYG{n}{ipsr}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();}
				\PYG{n}{ips}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();}
			\PYG{o}{\PYGZcb{}}		
			\PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{o}{)}
			\PYG{o}{\PYGZob{}}
				\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{n}{e}\PYG{o}{.}\PYG{n+na}{toString}\PYG{o}{());}
			\PYG{o}{\PYGZcb{}}
			\PYG{k}{return} \PYG{n}{fic}\PYG{o}{;}
		\PYG{o}{\PYGZcb{}} 
	\PYG{n+nd}{@Override}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseClicked}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{arg0}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated method stub}
		
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setTitle}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Lancement d\PYGZsq{}une tache\PYGZdq{}}\PYG{o}{);}
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setSize}\PYG{o}{(}\PYG{l+m+mi}{800}\PYG{o}{,} \PYG{l+m+mi}{400}\PYG{o}{);}
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setLocationRelativeTo}\PYG{o}{(}\PYG{k+kc}{null}\PYG{o}{);}
		
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setBackground}\PYG{o}{(}\PYG{n}{Color}\PYG{o}{.}\PYG{n+na}{white}\PYG{o}{);}
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setLayout}\PYG{o}{(}\PYG{k}{new} \PYG{n}{FlowLayout}\PYG{o}{());}
		\PYG{n}{repertoire} \PYG{o}{=} \PYG{k}{new} \PYG{n}{File}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}DB\PYGZus{}JOBS\PYGZdq{}}\PYG{o}{);}
		\PYG{n}{files} \PYG{o}{=}\PYG{n}{repertoire}\PYG{o}{.}\PYG{n+na}{listFiles}\PYG{o}{(}\PYG{n}{xmlFileFilter}\PYG{o}{);}
		
		\PYG{n}{comboPrb}\PYG{o}{.}\PYG{n+na}{setPreferredSize}\PYG{o}{(}\PYG{k}{new} \PYG{n}{Dimension}\PYG{o}{(}\PYG{l+m+mi}{150}\PYG{o}{,} \PYG{l+m+mi}{40}\PYG{o}{));}
		\PYG{k}{for}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{files}\PYG{o}{.}\PYG{n+na}{length}\PYG{o}{;}\PYG{n}{i}\PYG{o}{++)}
		\PYG{o}{\PYGZob{}}
			\PYG{k+kt}{int} \PYG{n}{taille\PYGZus{}nom}\PYG{o}{=} \PYG{n}{files}\PYG{o}{[}\PYG{n}{i}\PYG{o}{].}\PYG{n+na}{getName}\PYG{o}{().}\PYG{n+na}{length}\PYG{o}{();}
			\PYG{n}{comboPrb}\PYG{o}{.}\PYG{n+na}{addItem}\PYG{o}{((}\PYG{n}{files}\PYG{o}{[}\PYG{n}{i}\PYG{o}{].}\PYG{n+na}{getName}\PYG{o}{()).}\PYG{n+na}{substring}\PYG{o}{(}\PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{taille\PYGZus{}nom}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{4}\PYG{o}{));}
		\PYG{o}{\PYGZcb{}}
		

	    \PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{comboPrb}\PYG{o}{);}

	    \PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{bouton\PYGZus{}ok}\PYG{o}{);}
		\PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{setVisible}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{);} 
   	    
		\PYG{n}{bouton\PYGZus{}ok}\PYG{o}{.}\PYG{n+na}{addMouseListener}\PYG{o}{(}\PYG{k}{new} \PYG{n}{MouseListener}\PYG{o}{()\PYGZob{}}

		    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseClicked}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		    	\PYG{c+cm}{/*Lancement du JOB*/}
		    	\PYG{c+c1}{// on recupere ce qui a ete choisi }
		    	\PYG{n}{String} \PYG{n}{choix} \PYG{o}{=}\PYG{n}{comboPrb}\PYG{o}{.}\PYG{n+na}{getSelectedItem}\PYG{o}{().}\PYG{n+na}{toString}\PYG{o}{();}
		    
		    	\PYG{n}{String} \PYG{n}{username} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}provider\PYGZdq{}}\PYG{o}{;}
		    	\PYG{n}{String} \PYG{n}{password} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}toto\PYGZdq{}}\PYG{o}{;}
		    	\PYG{n}{choix}\PYG{o}{=} \PYG{n}{choix}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}.xml\PYGZdq{}}\PYG{o}{;} 
		    	\PYG{n}{ProblemeCourant}\PYG{o}{=} \PYG{n}{FileToString}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}DB\PYGZus{}JOBS/\PYGZdq{}}\PYG{o}{+}\PYG{n}{choix}\PYG{o}{);}
		    	
		    	\PYG{k}{try} \PYG{o}{\PYGZob{}} 
					\PYG{c+cm}{/*On initialise la connection */}
					\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{init}\PYG{o}{();}
					\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{performLogin}\PYG{o}{(}\PYG{n}{username}\PYG{o}{,} \PYG{n}{password}\PYG{o}{);}
					\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{setStatus}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}YOLO\PYGZdq{}}\PYG{o}{);}  
					\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{setProvider}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{);}
					
					\PYG{c+cm}{/*On crer la chatroom Multiuser */}
					  \PYG{c+c1}{//Get the MultiUserChatManager}
					
					  \PYG{c+c1}{//Create a MultiUserChat using an XMPPConnection for a room}
					  \PYG{n}{String} \PYG{n}{Name\PYGZus{}room} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}providing\PYGZus{}room\PYGZus{}\PYGZdq{}}\PYG{o}{+}\PYG{n}{comboPrb}\PYG{o}{.}\PYG{n+na}{getSelectedItem}\PYG{o}{().}\PYG{n+na}{toString}\PYG{o}{()+}\PYG{l+s}{\PYGZdq{}@conference.\PYGZdq{}}\PYG{o}{+}\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{NOM\PYGZus{}HOTE}\PYG{o}{;}
					  \PYG{n}{MultiUserChat} \PYG{n}{muc} \PYG{o}{=} \PYG{k}{new} \PYG{n}{MultiUserChat}\PYG{o}{(}\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{getConnection}\PYG{o}{(),} \PYG{n}{Name\PYGZus{}room}\PYG{o}{);}
					
					  \PYG{c+c1}{// Create the room identity}
					  \PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{create}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}BOT\PYGZus{}Providing\PYGZdq{}}\PYG{o}{);}
					  
					  \PYG{c+c1}{// Send an empty room configuration form which indicates that we want}
					  \PYG{c+c1}{// an instant room}
					  \PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{sendConfigurationForm}\PYG{o}{(}\PYG{k}{new} \PYG{n}{Form}\PYG{o}{(}\PYG{n}{Form}\PYG{o}{.}\PYG{n+na}{TYPE\PYGZus{}SUBMIT}\PYG{o}{));}
					  \PYG{c+cm}{/*On essaye d\PYGZsq{}utiliser le XML selectioner*/}
					  
					  \PYG{c+c1}{//On va essayer d\PYGZsq{}avoir la liste des utilisateurs selectionner et de leur envoyer chacun une tache a faire }
					  

				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}On enregistre le nombre de personne\PYGZdq{}}\PYG{o}{);}
				      \PYG{k+kt}{int}  \PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{=}\PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{getOccupantsCount}\PYG{o}{();}
				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Number of occupants et affichage de la liste:\PYGZdq{}}\PYG{o}{+}\PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{);}
				      
				      \PYG{n}{Iterator} \PYG{n}{it} \PYG{o}{=} \PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{getOccupants}\PYG{o}{();}
				      
				      \PYG{k}{while}\PYG{o}{(}\PYG{n}{it}\PYG{o}{.}\PYG{n+na}{hasNext}\PYG{o}{())}
				      \PYG{o}{\PYGZob{}}
				    	  \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{print}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Membre : \PYGZdq{}}\PYG{o}{);}
				    	  \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Valeur \PYGZdq{}}\PYG{o}{+}\PYG{n}{it}\PYG{o}{.}\PYG{n+na}{next}\PYG{o}{());}	  
				      \PYG{o}{\PYGZcb{}}
				      
				      \PYG{c+cm}{/*On attend un nombre d\PYGZsq{}utilisateur requis par le split ici on le simule seulement avec 1 utilisateur de type worker */}
				      
				      \PYG{c+c1}{//On cherche a savoir combien d\PYGZsq{}utilisateurs par rapport au fichier xml enregistrer}
				      
				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}On attend un nombre dutilisateur precis\PYGZdq{}}\PYG{o}{);}
				      \PYG{k+kt}{int} \PYG{n}{Nombre\PYGZus{}requis}\PYG{o}{=}\PYG{l+m+mi}{3}\PYG{o}{;}
				      
				      \PYG{n}{DocumentBuilderFactory} \PYG{n}{factory} \PYG{o}{=} \PYG{n}{DocumentBuilderFactory}\PYG{o}{.}\PYG{n+na}{newInstance}\PYG{o}{();}


				      \PYG{k}{try} \PYG{o}{\PYGZob{}}

				         \PYG{n}{DocumentBuilder} \PYG{n}{builder} \PYG{o}{=} \PYG{n}{factory}\PYG{o}{.}\PYG{n+na}{newDocumentBuilder}\PYG{o}{();}

				         \PYG{n}{File} \PYG{n}{fileXML} \PYG{o}{=} \PYG{k}{new} \PYG{n}{File}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}DB\PYGZus{}JOBS/\PYGZdq{}}\PYG{o}{+}\PYG{n}{choix}\PYG{o}{);}

				         \PYG{n}{Document} \PYG{n}{xml} \PYG{o}{=} \PYG{n}{builder}\PYG{o}{.}\PYG{n+na}{parse}\PYG{o}{(}\PYG{n}{fileXML}\PYG{o}{);}

				         \PYG{n}{Element} \PYG{n}{root} \PYG{o}{=} \PYG{n}{xml}\PYG{o}{.}\PYG{n+na}{getDocumentElement}\PYG{o}{();}

				         \PYG{n}{XPathFactory} \PYG{n}{xpf} \PYG{o}{=} \PYG{n}{XPathFactory}\PYG{o}{.}\PYG{n+na}{newInstance}\PYG{o}{();}

				         \PYG{n}{XPath} \PYG{n}{path} \PYG{o}{=} \PYG{n}{xpf}\PYG{o}{.}\PYG{n+na}{newXPath}\PYG{o}{();}

				                   

				        \PYG{n}{String} \PYG{n}{expression} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}/JOB/rang\PYGZdq{}}\PYG{o}{;}

				        \PYG{n}{String} \PYG{n}{str} \PYG{o}{=} \PYG{o}{(}\PYG{n}{String}\PYG{o}{)}\PYG{n}{path}\PYG{o}{.}\PYG{n+na}{evaluate}\PYG{o}{(}\PYG{n}{expression}\PYG{o}{,} \PYG{n}{root}\PYG{o}{);}

				        \PYG{n}{Nombre\PYGZus{}requis}\PYG{o}{=}\PYG{n}{Integer}\PYG{o}{.}\PYG{n+na}{parseInt}\PYG{o}{(}\PYG{n}{str}\PYG{o}{);}

				        \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZdq{}}\PYG{o}{);}
				      \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{ParserConfigurationException} \PYG{n}{xe}\PYG{o}{)} \PYG{o}{\PYGZob{}}
				          \PYG{n}{xe}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
				       \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{SAXException} \PYG{n}{xe}\PYG{o}{)} \PYG{o}{\PYGZob{}}
				          \PYG{n}{xe}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
				       \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{IOException} \PYG{n}{xe}\PYG{o}{)} \PYG{o}{\PYGZob{}}
				          \PYG{n}{xe}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
				       \PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{XPathExpressionException} \PYG{n}{xe}\PYG{o}{)} \PYG{o}{\PYGZob{}}
				          \PYG{n}{xe}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
				       \PYG{o}{\PYGZcb{}}
				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}NBR : \PYGZdq{}}\PYG{o}{+}\PYG{n}{Nombre\PYGZus{}requis}\PYG{o}{);}
				      
				    \PYG{c+c1}{//modifier ici attention nombre requis = 2 ,valable uniquement pour les tests }
				      \PYG{k}{while}\PYG{o}{(}\PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{\PYGZlt{}}\PYG{n}{Nombre\PYGZus{}requis}\PYG{o}{)\PYGZob{}}
				    	  \PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{=}\PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{getOccupantsCount}\PYG{o}{();}
					      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Number of occupants et affichage de la liste:\PYGZdq{}}\PYG{o}{+}\PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{);}
					      
					      \PYG{n}{it} \PYG{o}{=} \PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{getOccupants}\PYG{o}{();}
					      
					      \PYG{k}{while}\PYG{o}{(}\PYG{n}{it}\PYG{o}{.}\PYG{n+na}{hasNext}\PYG{o}{())}
					      \PYG{o}{\PYGZob{}}
					    	  \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Affichage tableau : \PYGZdq{}}\PYG{o}{);}
					    	  \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Valeur \PYGZdq{}}\PYG{o}{+}\PYG{n}{it}\PYG{o}{.}\PYG{n+na}{next}\PYG{o}{());}	  
					      \PYG{o}{\PYGZcb{}}

				      \PYG{o}{\PYGZcb{}}
				      
				      \PYG{c+c1}{//Faire liste utilisateurs de la room}
				      
				   
				      \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Occupant}\PYG{o}{\PYGZgt{}} \PYG{n}{Liste}\PYG{o}{=(}\PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Occupant}\PYG{o}{\PYGZgt{})}\PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{getParticipants}\PYG{o}{();}
				      
				      
				      \PYG{k}{for}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{Liste}\PYG{o}{.}\PYG{n+na}{size}\PYG{o}{();}\PYG{n}{i}\PYG{o}{++)}
				      \PYG{o}{\PYGZob{}}
				    	  \PYG{n}{Liste\PYGZus{}user}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{k}{new} \PYG{n}{Identity}\PYG{o}{(}\PYG{n}{Liste}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getJid}\PYG{o}{(),}\PYG{n}{Liste}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getRole}\PYG{o}{(),}\PYG{n}{Liste}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getNick}\PYG{o}{()));}
				    	  \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Nickname \PYGZdq{}}\PYG{o}{+}\PYG{n}{i}\PYG{o}{+}\PYG{n}{Liste}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getNick}\PYG{o}{());}
				      \PYG{o}{\PYGZcb{}}
				    	  			      
				      
				      \PYG{c+c1}{//maintenant que on a la liste des utilisateur connecte a la chatRoom on va leur envoyer chacun un \PYGZsh{}Split method un job }
				      \PYG{c+c1}{//On a attendu que lon est assez de participant ou pas en fonction du split }
				      \PYG{c+c1}{//Voir pour filtrer son propre nom a savoir is on est tjr le premier ou pas }
				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Debut split \PYGZdq{}}\PYG{o}{);}
				      \PYG{c+c1}{//modifier ici attention on a pas le bon nombre de participant}
				      \PYG{n}{split}\PYG{o}{(}\PYG{n}{Liste\PYGZus{}user}\PYG{o}{,}\PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{,}\PYG{n}{ProblemeCourant}\PYG{o}{,}\PYG{n}{xmppManager}\PYG{o}{,}\PYG{n}{choix}\PYG{o}{);}
				      
				      \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Fin du split \PYGZdq{}}\PYG{o}{);}
					  \PYG{n}{muc}\PYG{o}{.}\PYG{n+na}{sendMessage}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Lancement du probleme du\PYGZdq{}}\PYG{o}{+}\PYG{n}{comboPrb}\PYG{o}{.}\PYG{n+na}{getSelectedItem}\PYG{o}{().}\PYG{n+na}{toString}\PYG{o}{());}
					  
					  \PYG{c+cm}{/*Maintenant que l\PYGZsq{}on a envoyer plusieurs problemes on va essayer davoir leur reponses*/}
					  
					  \PYG{n}{isRunning} \PYG{o}{=} \PYG{k+kc}{true}\PYG{o}{;}
					  \PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{res}\PYG{o}{);}
					  \PYG{k}{while} \PYG{o}{(}\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{isTravail\PYGZus{}terminer}\PYG{o}{())\PYGZob{}}
						  \PYG{n}{Thread}\PYG{o}{.}\PYG{n+na}{sleep}\PYG{o}{(}\PYG{l+m+mi}{50}\PYG{o}{);}
					  \PYG{o}{\PYGZcb{}}
					  \PYG{c+c1}{//on a eu le resultat}
					  \PYG{n}{res}\PYG{o}{.}\PYG{n+na}{setText}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}Resultat : \PYGZdq{}}\PYG{o}{+}\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{getRetour\PYGZus{}Providing}\PYG{o}{());}
					  \PYG{n}{fenetre}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{res}\PYG{o}{);}
					  \PYG{n}{Thread}\PYG{o}{.}\PYG{n+na}{sleep}\PYG{o}{(}\PYG{l+m+mi}{5000}\PYG{o}{);}
					  \PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{destroy}\PYG{o}{();}	
					  
					  
		    	\PYG{o}{\PYGZcb{}}
		    	 \PYG{k}{catch} \PYG{o}{(}\PYG{n}{XMPPException} \PYG{n}{ex}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		    		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated catch block}
		    		  \PYG{n}{ex}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
		    	\PYG{o}{\PYGZcb{}}
		    	\PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{ex}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		    		 \PYG{c+c1}{// TODO Auto\PYGZhy{}generated catch block}
		    		  \PYG{n}{ex}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
		    	\PYG{o}{\PYGZcb{}}
		    	
		    \PYG{o}{\PYGZcb{}}

		    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mousePressed}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}

		    \PYG{o}{\PYGZcb{}}

		    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseReleased}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}

		    \PYG{o}{\PYGZcb{}}

		    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseEntered}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}

		    \PYG{o}{\PYGZcb{}}

		    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseExited}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}

			\PYG{o}{\PYGZcb{}}
		\PYG{o}{\PYGZcb{});}
	\PYG{o}{\PYGZcb{}}

	\PYG{n+nd}{@Override}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseEntered}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{arg0}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated method stub}

	\PYG{o}{\PYGZcb{}}

	\PYG{n+nd}{@Override}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseExited}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{arg0}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated method stub}

	\PYG{o}{\PYGZcb{}}

	\PYG{n+nd}{@Override}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mousePressed}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{arg0}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated method stub}

	\PYG{o}{\PYGZcb{}}

	\PYG{n+nd}{@Override}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{mouseReleased}\PYG{o}{(}\PYG{n}{MouseEvent} \PYG{n}{arg0}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// TODO Auto\PYGZhy{}generated method stub}

	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{n+nf}{split}\PYG{o}{(}\PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Identity}\PYG{o}{\PYGZgt{}} \PYG{n}{Liste\PYGZus{}user}\PYG{o}{,}\PYG{k+kt}{int} \PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{,}\PYG{n}{String} \PYG{n}{ProblemeCourant}\PYG{o}{,}\PYG{n}{XmppManager} \PYG{n}{xmppManager}\PYG{o}{,}\PYG{n}{String} \PYG{n}{choix}\PYG{o}{)}
	\PYG{o}{\PYGZob{}}
		\PYG{c+c1}{//modifier ici attention}
		\PYG{k}{for}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{o}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{Nombre\PYGZus{}Participants}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{;}\PYG{n}{i}\PYG{o}{++)}
		\PYG{o}{\PYGZob{}}
			\PYG{n}{String} \PYG{n}{buddyJID} \PYG{o}{=} \PYG{n}{Liste\PYGZus{}user}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getId}\PYG{o}{();}
			\PYG{n}{String} \PYG{n}{buddyName} \PYG{o}{=} \PYG{n}{Liste\PYGZus{}user}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{i}\PYG{o}{).}\PYG{n+na}{getName}\PYG{o}{();}
			      
			\PYG{k}{try} \PYG{o}{\PYGZob{}}
				\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{createEntry}\PYG{o}{(}\PYG{n}{buddyJID}\PYG{o}{,} \PYG{n}{buddyName}\PYG{o}{);}
				
				\PYG{c+c1}{//On va crer le message XML approprier puis l\PYGZsq{}envoyer }
				
				
				
				\PYG{c+c1}{//On construit le fichier XML avec le code a executer }
		
		            
	            \PYG{c+cm}{/* On va dans un premier temps rechercher l\PYGZsq{}ensemble des noms des patients de notre hôpital. */}
	            
	            \PYG{c+cm}{/* Recherche de la liste des exec*/}
				
				\PYG{n}{DocumentBuilderFactory} \PYG{n}{factory} \PYG{o}{=} \PYG{n}{DocumentBuilderFactory}\PYG{o}{.}\PYG{n+na}{newInstance}\PYG{o}{();}
				\PYG{n}{DocumentBuilder} \PYG{n}{builder} \PYG{o}{=} \PYG{n}{factory}\PYG{o}{.}\PYG{n+na}{newDocumentBuilder}\PYG{o}{();}

		        \PYG{n}{File} \PYG{n}{fileXML} \PYG{o}{=} \PYG{k}{new} \PYG{n}{File}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}DB\PYGZus{}JOBS/\PYGZdq{}}\PYG{o}{+}\PYG{n}{choix}\PYG{o}{);}

		        \PYG{n}{Document} \PYG{n}{xml} \PYG{o}{=} \PYG{n}{builder}\PYG{o}{.}\PYG{n+na}{parse}\PYG{o}{(}\PYG{n}{fileXML}\PYG{o}{);}

		        \PYG{n}{Element} \PYG{n}{root} \PYG{o}{=} \PYG{n}{xml}\PYG{o}{.}\PYG{n+na}{getDocumentElement}\PYG{o}{();}

		        \PYG{n}{XPathFactory} \PYG{n}{xpf} \PYG{o}{=} \PYG{n}{XPathFactory}\PYG{o}{.}\PYG{n+na}{newInstance}\PYG{o}{();}

		        \PYG{n}{XPath} \PYG{n}{path} \PYG{o}{=} \PYG{n}{xpf}\PYG{o}{.}\PYG{n+na}{newXPath}\PYG{o}{();}

		                   

		        \PYG{n}{String} \PYG{n}{expression} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}/JOB/code\PYGZus{}exec\PYGZdq{}}\PYG{o}{;}

		        \PYG{n}{String} \PYG{n}{strexec} \PYG{o}{=} \PYG{o}{(}\PYG{n}{String}\PYG{o}{)}\PYG{n}{path}\PYG{o}{.}\PYG{n+na}{evaluate}\PYG{o}{(}\PYG{n}{expression}\PYG{o}{,} \PYG{n}{root}\PYG{o}{);}
		        \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{print}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}DEBUT STR EXEC\PYGZdq{}}\PYG{o}{);}
		        \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{print}\PYG{o}{(}\PYG{n}{strexec}\PYG{o}{);}
		        \PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{print}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}FIN STR EXEC\PYGZdq{}}\PYG{o}{);}

		        \PYG{n}{expression} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}/JOB/code\PYGZus{}Perl\PYGZdq{}}\PYG{o}{;}

		        \PYG{n}{String} \PYG{n}{strperl} \PYG{o}{=} \PYG{o}{(}\PYG{n}{String}\PYG{o}{)}\PYG{n}{path}\PYG{o}{.}\PYG{n+na}{evaluate}\PYG{o}{(}\PYG{n}{expression}\PYG{o}{,} \PYG{n}{root}\PYG{o}{);}
	            
	            \PYG{c+cm}{/* On récupère tous les noeuds répondant au chemin //patient */}

				
				\PYG{c+c1}{// On ajouter a sa la bonne ligne de commande a executer}
		        \PYG{n}{expression} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}/JOB/cmd\PYGZdq{}}\PYG{o}{;}

		        \PYG{n}{String} \PYG{n}{strcmd} \PYG{o}{=} \PYG{o}{(}\PYG{n}{String}\PYG{o}{)}\PYG{n}{path}\PYG{o}{.}\PYG{n+na}{evaluate}\PYG{o}{(}\PYG{n}{expression}\PYG{o}{,} \PYG{n}{root}\PYG{o}{);}
		            
		        \PYG{c+cm}{/* On récupère tous les noeuds répondant au chemin //patient */}
				
				\PYG{n}{String} \PYG{n}{delims} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}[,]\PYGZdq{}}\PYG{o}{;}
				\PYG{n}{String}\PYG{o}{[]} \PYG{n}{tokens} \PYG{o}{=}\PYG{n}{strcmd}\PYG{o}{.}\PYG{n+na}{split}\PYG{o}{(}\PYG{n}{delims}\PYG{o}{);}
				\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{print}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}affichage des tokens\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{tokens}\PYG{o}{[}\PYG{n}{tokens}\PYG{o}{.}\PYG{n+na}{length}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{]=}\PYG{n}{tokens}\PYG{o}{[}\PYG{n}{tokens}\PYG{o}{.}\PYG{n+na}{length}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{].}\PYG{n+na}{substring}\PYG{o}{(}\PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{tokens}\PYG{o}{[}\PYG{n}{tokens}\PYG{o}{.}\PYG{n+na}{length}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{].}\PYG{n+na}{length}\PYG{o}{()\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{);}
				\PYG{k}{for}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{j}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{o}{;}\PYG{n}{j}\PYG{o}{\PYGZlt{}}\PYG{n}{tokens}\PYG{o}{.}\PYG{n+na}{length}\PYG{o}{;}\PYG{n}{j}\PYG{o}{++)}
					\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{n}{j}\PYG{o}{+}\PYG{l+s}{\PYGZdq{} : \PYGZdq{}}\PYG{o}{+}\PYG{n}{tokens}\PYG{o}{[}\PYG{n}{j}\PYG{o}{]);}
				
				\PYG{c+c1}{//Faut parser la liste }
				
				
				  
				\PYG{k+kd}{final} \PYG{n}{Document} \PYG{n}{document}\PYG{o}{=} \PYG{n}{builder}\PYG{o}{.}\PYG{n+na}{newDocument}\PYG{o}{();}
					
				\PYG{k+kd}{final} \PYG{n}{Element} \PYG{n}{racine} \PYG{o}{=} \PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createElement}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}JOB\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{document}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{racine}\PYG{o}{);}	
				\PYG{k+kd}{final} \PYG{n}{Element} \PYG{n}{exec} \PYG{o}{=} \PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createElement}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}exec\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{exec}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createTextNode}\PYG{o}{(}\PYG{n}{strexec}\PYG{o}{));}
				
				\PYG{k+kd}{final} \PYG{n}{Element} \PYG{n}{contraintes} \PYG{o}{=} \PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createElement}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}contraintes\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{contraintes}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createTextNode}\PYG{o}{(}\PYG{n}{strperl}\PYG{o}{));}
				
				
				\PYG{k+kd}{final} \PYG{n}{Element} \PYG{n}{cmd} \PYG{o}{=} \PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createElement}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}cmd\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{cmd}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createTextNode}\PYG{o}{(}\PYG{n}{tokens}\PYG{o}{[}\PYG{n}{i}\PYG{o}{]));}
				\PYG{k+kd}{final} \PYG{n}{Element} \PYG{n}{id} \PYG{o}{=} \PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createElement}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}id\PYGZdq{}}\PYG{o}{);}
				\PYG{n}{id}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{document}\PYG{o}{.}\PYG{n+na}{createTextNode}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{o}{+}\PYG{n}{i}\PYG{o}{));}
				\PYG{n}{racine}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{id}\PYG{o}{);}
				\PYG{n}{racine}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{contraintes}\PYG{o}{);}
				\PYG{n}{racine}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{exec}\PYG{o}{);}
				\PYG{n}{racine}\PYG{o}{.}\PYG{n+na}{appendChild}\PYG{o}{(}\PYG{n}{cmd}\PYG{o}{);}
				
				\PYG{k+kd}{final} \PYG{n}{TransformerFactory} \PYG{n}{transformerFactory} \PYG{o}{=} \PYG{n}{TransformerFactory}\PYG{o}{.}\PYG{n+na}{newInstance}\PYG{o}{();}
			    \PYG{k+kd}{final} \PYG{n}{Transformer} \PYG{n}{transformer} \PYG{o}{=} \PYG{n}{transformerFactory}\PYG{o}{.}\PYG{n+na}{newTransformer}\PYG{o}{();}
			    \PYG{k+kd}{final} \PYG{n}{DOMSource} \PYG{n}{source} \PYG{o}{=} \PYG{k}{new} \PYG{n}{DOMSource}\PYG{o}{(}\PYG{n}{document}\PYG{o}{);}
			    \PYG{k+kd}{final} \PYG{n}{StreamResult} \PYG{n}{sortie} \PYG{o}{=} \PYG{k}{new} \PYG{n}{StreamResult}\PYG{o}{(}\PYG{k}{new} \PYG{n}{File}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}JOB\PYGZus{}SEND/XML\PYGZus{}send\PYGZus{}\PYGZdq{}}\PYG{o}{+}\PYG{n}{i}\PYG{o}{));}
			    \PYG{n}{transformer}\PYG{o}{.}\PYG{n+na}{transform}\PYG{o}{(}\PYG{n}{source}\PYG{o}{,} \PYG{n}{sortie}\PYG{o}{);}	
				
				\PYG{n}{String} \PYG{n}{Probleme\PYGZus{}individuel}\PYG{o}{=}\PYG{n}{FileToString}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}JOB\PYGZus{}SEND/XML\PYGZus{}send\PYGZus{}\PYGZdq{}}\PYG{o}{+}\PYG{n}{i}\PYG{o}{);}
				
				\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{sendMessage}\PYG{o}{(}\PYG{n}{Probleme\PYGZus{}individuel}\PYG{o}{,} \PYG{n}{buddyName}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}@\PYGZdq{}}\PYG{o}{+}\PYG{n}{xmppManager}\PYG{o}{.}\PYG{n+na}{NOM\PYGZus{}HOTE}\PYG{o}{);}
				
				
				
			\PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}
				\PYG{c+c1}{// TODO Auto\PYGZhy{}generated catch block}
				\PYG{n}{e}\PYG{o}{.}\PYG{n+na}{printStackTrace}\PYG{o}{();}
			\PYG{o}{\PYGZcb{}}
			\PYG{c+c1}{// Ici on fait apelle a la fonction split }

		\PYG{o}{\PYGZcb{}}
		 
		\PYG{k}{return} \PYG{l+m+mi}{0}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{getName}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{name}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setName}\PYG{o}{(}\PYG{n}{String} \PYG{n}{name}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{name} \PYG{o}{=} \PYG{n}{name}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{Image} \PYG{n+nf}{getImg}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{img}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setImg}\PYG{o}{(}\PYG{n}{Image} \PYG{n}{img}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{img} \PYG{o}{=} \PYG{n}{img}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{JButton} \PYG{n+nf}{getBouton\PYGZus{}ok}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{bouton\PYGZus{}ok}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setBouton\PYGZus{}ok}\PYG{o}{(}\PYG{n}{JButton} \PYG{n}{bouton\PYGZus{}ok}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{bouton\PYGZus{}ok} \PYG{o}{=} \PYG{n}{bouton\PYGZus{}ok}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{JFrame} \PYG{n+nf}{getFenetre}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{fenetre}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setFenetre}\PYG{o}{(}\PYG{n}{JFrame} \PYG{n}{fenetre}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{fenetre} \PYG{o}{=} \PYG{n}{fenetre}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{JComboBox}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n+nf}{getComboPrb}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{comboPrb}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setComboPrb}\PYG{o}{(}\PYG{n}{JComboBox}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{comboPrb}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{comboPrb} \PYG{o}{=} \PYG{n}{comboPrb}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	
	\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{n}{FilenameFilter} \PYG{n+nf}{getXmlFileFilter}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{xmlFileFilter}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{setXmlFileFilter}\PYG{o}{(}\PYG{n}{FilenameFilter} \PYG{n}{xmlFileFilter}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{ButtonLaunch}\PYG{o}{.}\PYG{n+na}{xmlFileFilter} \PYG{o}{=} \PYG{n}{xmlFileFilter}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{File} \PYG{n+nf}{getRepertoire}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{repertoire}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setRepertoire}\PYG{o}{(}\PYG{n}{File} \PYG{n}{repertoire}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{repertoire} \PYG{o}{=} \PYG{n}{repertoire}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{File}\PYG{o}{[]} \PYG{n+nf}{getFiles}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{files}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setFiles}\PYG{o}{(}\PYG{n}{File}\PYG{o}{[]} \PYG{n}{files}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{files} \PYG{o}{=} \PYG{n}{files}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{File} \PYG{n+nf}{getFichier\PYGZus{}Choisi}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{fichier\PYGZus{}Choisi}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setFichier\PYGZus{}Choisi}\PYG{o}{(}\PYG{n}{File} \PYG{n}{fichier\PYGZus{}Choisi}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{fichier\PYGZus{}Choisi} \PYG{o}{=} \PYG{n}{fichier\PYGZus{}Choisi}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{XmppManager} \PYG{n+nf}{getXmppManager}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{xmppManager}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setXmppManager}\PYG{o}{(}\PYG{n}{XmppManager} \PYG{n}{xmppManager}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{xmppManager} \PYG{o}{=} \PYG{n}{xmppManager}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{getProblemeCourant}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{ProblemeCourant}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setProblemeCourant}\PYG{o}{(}\PYG{n}{String} \PYG{n}{problemeCourant}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{ProblemeCourant} \PYG{o}{=} \PYG{n}{problemeCourant}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{boolean} \PYG{n+nf}{isRunning}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{isRunning}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setRunning}\PYG{o}{(}\PYG{k+kt}{boolean} \PYG{n}{isRunning}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{this}\PYG{o}{.}\PYG{n+na}{isRunning} \PYG{o}{=} \PYG{n}{isRunning}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Identity}\PYG{o}{\PYGZgt{}} \PYG{n+nf}{getListe\PYGZus{}user}\PYG{o}{()} \PYG{o}{\PYGZob{}}
		\PYG{k}{return} \PYG{n}{Liste\PYGZus{}user}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setListe\PYGZus{}user}\PYG{o}{(}\PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Identity}\PYG{o}{\PYGZgt{}} \PYG{n}{liste\PYGZus{}user}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{Liste\PYGZus{}user} \PYG{o}{=} \PYG{n}{liste\PYGZus{}user}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}
	
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
